const User = require("../models/UserModel");
const bcrypt = require("bcryptjs");

// Register User
const registerUser = async (req, res) => {
  console.log("üîπ Received request:", req.body);

  const { username, password } = req.body;
  try {
    const existingUser = await User.findOne({ username });
    if (existingUser) {
      console.log("‚ö†Ô∏è User already exists");
      return res.status(400).json({ error: "‚ö†Ô∏è Account already exists" });
    }
    const hashedPassword = await bcrypt.hash(password, 10);
    const user = new User({ username, password: hashedPassword });
    await user.save();
    console.log("‚úÖ User registered successfully!");
    res.status(201).json({ message: "‚úÖ Registration successful" });
  } catch (error) {
    console.error("‚ùå Registration Error:", error);
    res.status(500).json({ error: "‚ùå Registration failed" });
  }
};

// Login User
const loginUser = async (req, res) => {
  const { username, password } = req.body;
  try {
    const user = await User.findOne({ username });
    if (!user) return res.status(400).json({ error: "‚ö†Ô∏è User not found" });

    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) return res.status(400).json({ error: "‚ö†Ô∏è Invalid credentials" });

    res.json({ message: "‚úÖ Login successful", user: { id: user._id, username: user.username } });
  } catch (error) {
    res.status(500).json({ error: "‚ùå Login failed" });
  }
};

module.exports = { registerUser, loginUser };
